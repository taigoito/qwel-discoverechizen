// Grid

// コンテナ生成
// コンテナ内での絶対配置の使用を想定 (position: relative)
// 各々BPにつきコンテナ幅を設定し、中央配置する
// 接頭辞を渡し、コンテナの最大幅を制御できる (デフォルトで"lg"を指定)
@mixin container($infix: "lg") {
  position: relative;
  width: map-get($containerWidths, "xs");
  @each $infix, $breakpoint in popBreakpoints($infix) {
    $containerWidth: map-get($containerWidths, $infix);
    @media (min-width: $breakpoint) {
      width: $containerWidth;
    }
  }
  margin-left: auto;
  margin-right: auto;
}

// 行生成
// アイテムの水平配置、垂直配置のプロパティを渡して、flexboxを設定
// コンテナに直接@includeしても良い
@mixin row($justifyContent: space-around, $alignItems: center) {
  display: flex;
  flex-wrap: wrap;
  justify-content: $justifyContent;
  align-items: $alignItems;
}

// 列生成
// 列内での絶対配置の使用を想定 (position: relative)
// 接頭辞、幅としての列数を引数として渡す (デフォルトで"auto"を指定)
@mixin col($infix: "xs", $size: "auto", $gridColumns: 12) {
  @if $infix == "xs" {
    position: relative;
    width: 100%; // メディアクエリが適用されない場合
    @if $size == "auto" {
      flex: 0 0 auto;
      max-width: none;
    } @else {
      flex: 0 0 percentage($size / $gridColumns);
      max-width: percentage($size / $gridColumns);
    }
  } @else {
    @media (min-width: map-get($breakpoints, $infix)) {
      @if $size == "auto" {
        flex: 0 0 auto;
        max-width: none;
      } @else {
        flex: 0 0 percentage($size / $gridColumns);
        max-width: percentage($size / $gridColumns);
      }
    }
  }
}
